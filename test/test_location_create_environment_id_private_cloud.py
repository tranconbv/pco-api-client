# coding: utf-8

"""
    CloudAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.location_create_environment_id_private_cloud import LocationCreateEnvironmentIdPrivateCloud  # noqa: E501

class TestLocationCreateEnvironmentIdPrivateCloud(unittest.TestCase):
    """LocationCreateEnvironmentIdPrivateCloud unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LocationCreateEnvironmentIdPrivateCloud:
        """Test LocationCreateEnvironmentIdPrivateCloud
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LocationCreateEnvironmentIdPrivateCloud`
        """
        model = LocationCreateEnvironmentIdPrivateCloud()  # noqa: E501
        if include_optional:
            return LocationCreateEnvironmentIdPrivateCloud(
                location_vpn = openapi_client.models.location_create_environment_id_private_cloud_location_vpn.LocationCreate_EnvironmentId_PrivateCloud_Location_VPN(
                    location = '', 
                    peer_ip = '', 
                    gate_way_ip = '', 
                    subnet = '', 
                    status = '', 
                    ike_version = openapi_client.models.location_create_environment_id_private_cloud_location_vpn_ike_version.LocationCreate_EnvironmentId_PrivateCloud_Location_VPN_IKE_Version(
                        version = '', ), )
            )
        else:
            return LocationCreateEnvironmentIdPrivateCloud(
        )
        """

    def testLocationCreateEnvironmentIdPrivateCloud(self):
        """Test LocationCreateEnvironmentIdPrivateCloud"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
